<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Mathematics ∙ Computer Science ∙ Ideas</title>
    <link>https://yellowtid.es/blog/</link>
    <description>Recent content in Blogs on Mathematics ∙ Computer Science ∙ Ideas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright © 2021, Andi Dicu.</copyright>
    <lastBuildDate>Tue, 07 Dec 2021 06:16:13 +0000</lastBuildDate><atom:link href="https://yellowtid.es/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Advent of Code 2021, Day 7: Minimising MSE &#43; AAD</title>
      <link>https://yellowtid.es/blog/posts/advent-of-code-2021-day-7-minimising-mse-aad/</link>
      <pubDate>Tue, 07 Dec 2021 06:16:13 +0000</pubDate>
      
      <guid>https://yellowtid.es/blog/posts/advent-of-code-2021-day-7-minimising-mse-aad/</guid>
      <description>The problem at hand It is the 7th day of the 2021 Advent of Code programming challenge! For the second challenge, we are given a dataset of $n$ points $X = (x_1, x_2, &amp;hellip;, x_n) \in \mathbb{Z}^n$. We are then asked to find $$\gamma = \text{argmin}_{x\in\mathbb{R}} \sum_{i=1}^n \text{dist}&#39;(x,\, x_i),$$ or, in other words, the value of $x \in \mathbb{R}$ that minimises the total sum of a distance function from it to all datapoints $$\text{dist}&#39;(x,\, x_i) = 1 + 2 + &amp;hellip; + |x-x_i| = \frac{1}{2}|x-x_i|\left(|x-x_i|+1\right).</description>
    </item>
    
    <item>
      <title>Computing discrete logs over GF(2 ^ n) in practice</title>
      <link>https://yellowtid.es/blog/posts/computing-discrete-logs-over-gf2-n-in-practice/</link>
      <pubDate>Mon, 16 Aug 2021 17:22:39 +0300</pubDate>
      
      <guid>https://yellowtid.es/blog/posts/computing-discrete-logs-over-gf2-n-in-practice/</guid>
      <description>Quick how-to # sage K.&amp;lt;x&amp;gt; = GF(2 ** n, impl=&amp;#39;pari_ffelt&amp;#39;) # invoke pari via SageMath&amp;#39;s bindings g = K(x ** 4 + x ** 2 + 1) h = g ** 123 h.log(g) # =&amp;gt; 123 The exact implementation SageMath uses for .log() with pari_ffelt can be found here.
Even for a (relatively) large $n$ this seems to be instantaneous, as opposed to the default implementation which simply hangs.
Other things to note Performing this calculation directly (in PARI/GP), e.</description>
    </item>
    
  </channel>
</rss>
