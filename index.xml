<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Maths. CompSci. Study notes.</title>
    <link>https://yellowtid.es/</link>
    <description>Recent content on Maths. CompSci. Study notes.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright Â© 2021, Andi Dicu.</copyright>
    <lastBuildDate>Tue, 07 Dec 2021 06:16:13 +0000</lastBuildDate><atom:link href="https://yellowtid.es/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Advent of Code 2021, Day 7: Minimising MSE &#43; AAD</title>
      <link>https://yellowtid.es/blog/posts/advent-of-code-2021-day-7-minimising-mse-aad/</link>
      <pubDate>Tue, 07 Dec 2021 06:16:13 +0000</pubDate>
      
      <guid>https://yellowtid.es/blog/posts/advent-of-code-2021-day-7-minimising-mse-aad/</guid>
      <description>The problem at hand It is the 7th day of the 2021 Advent of Code programming challenge! We are given a dataset of $n$ points $X = (x_1, x_2, &amp;hellip;, x_n) \in \mathbb{Z}^n$, and are asked to find $$\gamma = \text{argmin}_{x\in\mathbb{R}} \sum_{i=1}^n \text{dist}&#39;(x,\, x_i),$$ or, in other words, the value of $x \in \mathbb{R}$ that minimises the total sum of a distance function from it to all datapoints $$\text{dist}&#39;(x,\, x_i) = 1 + 2 + &amp;hellip; + |x-x_i| = \frac{1}{2}|x-x_i|\left(|x-x_i|+1\right).</description>
    </item>
    
    <item>
      <title>Write-ups</title>
      <link>https://yellowtid.es/write-ups/</link>
      <pubDate>Wed, 18 Aug 2021 13:19:15 +0300</pubDate>
      
      <guid>https://yellowtid.es/write-ups/</guid>
      <description>Write-ups for cryptanalysis problems I&amp;rsquo;ve solved in the past.  Hack the Box CTF 2021 [Qualifiers]  Waiting List [Hard; fb]  </description>
    </item>
    
    <item>
      <title>Self-study notes</title>
      <link>https://yellowtid.es/self-study-notes/</link>
      <pubDate>Tue, 17 Aug 2021 23:47:01 +0300</pubDate>
      
      <guid>https://yellowtid.es/self-study-notes/</guid>
      <description>Notes on topics I study/ied outside of uni.  Cryptography  LFSRs  </description>
    </item>
    
    <item>
      <title>Computing discrete logs over GF(2 ^ n) in practice</title>
      <link>https://yellowtid.es/blog/posts/computing-discrete-logs-over-gf2-n-in-practice/</link>
      <pubDate>Mon, 16 Aug 2021 17:22:39 +0300</pubDate>
      
      <guid>https://yellowtid.es/blog/posts/computing-discrete-logs-over-gf2-n-in-practice/</guid>
      <description>Quick how-to # sage K.&amp;lt;x&amp;gt; = GF(2 ** n, impl=&#39;pari_ffelt&#39;) # invoke pari via SageMath&#39;s bindings g = K(x ** 4 + x ** 2 + 1) h = g ** 123 h.log(g) # =&amp;gt; 123 The exact implementation SageMath uses for .log() with pari_ffelt can be found here.
Even for a (relatively) large $n$ this seems to be instantaneous, as opposed to the default implementation which simply hangs.
Other things to note Performing this calculation directly (in PARI/GP), e.</description>
    </item>
    
    <item>
      <title>Course notes</title>
      <link>https://yellowtid.es/course-notes/</link>
      <pubDate>Mon, 16 Aug 2021 14:25:44 +0300</pubDate>
      
      <guid>https://yellowtid.es/course-notes/</guid>
      <description>A collection of revision material from my undergraduate years at Edinburgh.  Year 2 1  Mathematics  Several Variable Calculus and Differential Equations Probability Fundamentals of Pure Mathematics  Computer Science  Introduction to Algorithms and Data Structures Foundations of Data Science Introduction to Computer Systems Reasoning and Agents    Academic year 2021/22.&amp;#160;&amp;#x21a9;&amp;#xfe0e;
   </description>
    </item>
    
  </channel>
</rss>
